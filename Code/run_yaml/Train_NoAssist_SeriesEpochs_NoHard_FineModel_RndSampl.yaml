description: MNLI_NoAug_NoHard_FineModel_RndSampl

target:
  service: amlk8s
  # run "amlt target list amlk8s" to list the names of available AMLK8s targets
  name: itphyperdgx2cl1
  vc: hai3

# target:
#   service: amlk8s
#   # run "amlt target list amlk8s" to list the names of available AMLK8s targets
#   name: itplabrr1cl1
#   vc: resrchvc

environment:
  image: pytorch/pytorch:1.4-cuda10.1-cudnn7-devel # pytorch/pytorch:1.0.1-cuda10.0-cudnn7-devel, 1.4-cuda10.1-cudnn7-devel, 1.6.0-cuda10.1-cudnn7-devel
  setup:
    - pip install -r requirements.txt
    - pip install --user boto3
    - pip install --user regex
    - pip install --user sklearn
    - pip install --user tensorflow-gpu==2.3.1
    # - git clone https://github.com/NVIDIA/apex
    # - cd apex
    # - pip install -v --disable-pip-version-check --no-cache-dir --global-option="--cpp_ext" --global-option="--cuda_ext" ./

code:
  # local directory of the code. this will be uploaded to the server.
  # $CONFIG_DIR is expanded to the directory of this config file
  local_dir: ../

# data:
#   local_dir:  ../../Data_and_Models
#   remote_dir: data_and_models

data:
  local_dir:  /home/subho/workspace/philly_data
  remote_dir: data_and_models

storage:
  output:
    storage_account_name: subho
    container_name: phillytools
    # mount_dir: /mnt/dynabertw

search:
  job_template:
    name: Epochs_{Num_Train_Epochs}
    sku: G4
    command:
      - python run_glue_NoAssist_RndSampl.py
        --model_type bert
        --task_name {TASK_NAME}
        --do_train
        --data_dir $$PT_DATA_DIR/Data_GLUE/glue_data/{TASK_NAME}/
        --model_dir $$PT_DATA_DIR/Local_models/finetuned_BERTs/bert_base_uncased_MNLI/
        --output_dir $$PT_OUTPUT_DIR/
        --max_seq_length {Max_Seq_Length}
        --learning_rate {LR}
        --per_gpu_train_batch_size {Per_GPU_Train_Batch_Size}
        --num_train_epochs {Num_Train_Epochs}
        --hidden_mult_list {Hidden_Mult_List}
        --depth_mult_list {Depth_Mult_List}
        --width_mult_list {Width_Mult_List}
        --depth_lambda1 {Depth_Lambda1}
        --depth_lambda2 {Depth_Lambda2}
        --depth_lambda3 {Depth_Lambda3}
        --depth_lambda4 {Depth_Lambda4}
        --training_phase {Training_Phase}
        # --logging_steps {Logging_Steps}
  type: grid
  max_trials: 100
  # parallel_trials: 2 ???
  params:
    - name: TASK_NAME
      spec: discrete
      values: ['MNLI']
    - name: Max_Seq_Length
      spec: discrete
      values: [128]
    - name: LR
      spec: discrete
      values: [2e-5]
    - name: Per_GPU_Train_Batch_Size
      spec: discrete
      values: [32]
    - name: Num_Train_Epochs
      spec: discrete
      values: [2, 4, 6]
    - name: Hidden_Mult_List
      spec: discrete
      values: ['0.25,0.5,1.0']
    - name: Depth_Mult_List
      spec: discrete
      values: ['0.25,0.33333,0.5']
    - name: Width_Mult_List
      spec: discrete
      values: ['0.5,0.66667,1.0']
    - name: Depth_Lambda1
      spec: discrete
      values: [1.0]
    - name: Depth_Lambda2
      spec: discrete
      values: [1.0]
    - name: Depth_Lambda3
      spec: discrete
      values: [0.001]
    - name: Depth_Lambda4
      spec: discrete
      values: [0.0]
    - name: Training_Phase
      spec: discrete
      values: ['dynabert']
    # - name: Logging_Steps
    #   spec: discrete
    #   values: [6000] # 12272 for one epoch




